#!/usr/bin/env python2
# This project is part of the Intro to Programming Nanodegree at Udacity.
# Written by Eva.
# This code is written in Python 2

# The following questions should be answered
# 1. What are the most popular three articles of all time?
# Which articles have been accessed the most?
# Present this information as a sorted list with the most popular article at
# the top.

# 2. Who are the most popular article authors of all time? That is, when
# you sum up all of the articles each author has written, which authors
# get the most page views? Present this as a sorted list with the most
# popular author at the top.

# 3. On which days did more than 1% of requests lead to errors? The log table
# includes a column status that indicates the HTTP status code
# that the news site sent to the user's browser.


import psycopg2

dbname = "news"

def most_popular_articles():
    """
        Overview on the top three articles based on the number of views
        joint with article table and counts number of views in database
        Output:
            top_articles
    """
    db = psycopg2.connect(database=dbname)
    c = db.cursor()
    c.execute('''select title, count(*) as num
                        from articles, log
                        WHERE log.path = '/article/' || articles.slug
                        and not path = '/'
                        group by title
                        order by num desc
                        limit 3;
                ''')
    most_popular_articles = c.fetchall()
    db.close()
    for row in most_popular_articles:
        print row[0],"--",row[1],"views"


def most_popular_authors():
    """
        Overview on top authors based on the number of views
        Counting in log table all views in news database and joins with
        articles and authors table

        Output:
            most popular authors
    """
    db = psycopg2.connect(database=dbname)
    c = db.cursor()
    c.execute('''select name, count(*) as num
                        from articles, authors, log
                        where articles.author = authors.id
                        and log.path = '/article/' || articles.slug
                        and not path = '/'
                        group by name
                        order by num desc;
                ''')
    most_popular_authors = c.fetchall()
    db.close()
    for row in most_popular_authors:
        print row[0],"--",row[1],"views"


def number_one_error():
    """
        Percentage of errors from requests
        Counting errors and timestamps
        Output:
            number one errors
    """
    db = psycopg2.connect(database=dbname)
    c = db.cursor()
    c.execute('''
                select date,
                round(((oneerror.request_error)/all_requests),3) as percent
                from (select cast(time as date) as date, count () as request_error
                from log where not status = '200 OK') as oneerror
                join(select cast(time as date) as date, count() as requests from log
                group by date) as total on date
                where (round(((oneerror.request_error)/all_requests),3> 0.01)
                order by percent desc;
                ''')
    number_one_error = c.fetchall()
    db.close()
    for row in number_one_error:
        print row[0],"--",row[1],"%"



def overview():
    """
        Delivers an overview of the answers for the quiz
        Output:
            Overview
    """
    print "Welcome you, following the most popular three articles ever:"
    print most_popular_articles()
    print "\n"
    print "The following the most popular article authors ever:"
    print most_popular_authors()
    print "\n"
    print "Following the dates for >1 percent requests, leading to an error:"
    print number_one_error()
    print "\n"

if __name__ == '__main__':
    print overview()
